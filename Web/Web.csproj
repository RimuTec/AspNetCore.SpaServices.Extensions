<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE</DefineConstants>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors>NU1605</WarningsAsErrors>
  </PropertyGroup>
 
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="RimuTec.Faker" Version="1.5.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RimuTec.AspNetCore.SpaServices.Extensions\RimuTec.AspNetCore.SpaServices.Extensions.csproj" />
  </ItemGroup>

  <!-- *********************************************************************************************************************************** -->
  <!-- BEGIN webpack-dev-server -->

  <PropertyGroup>
    <!-- This is where we set the path for the SPA files (include trailing slash to avoid having to repeat it elsewhere): -->
    <SpaRoot>MyApp/</SpaRoot> <!-- <<<<<<<<<<< THIS IS IMPORTANT! Also include trailing forward slash. -->
  </PropertyGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="PreBuildEvent" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <!-- If file 'package-lock.json' exists, we use 'npm ci', otherwise 'npm install'. In both cases 
         use the 'no-optionals' option to avoid an issue with fsevent reported at
         https://github.com/fsevents/fsevents/issues/301 -->
    <PropertyGroup>
      <PackageLockFile>$(SpaRoot)package-lock.json</PackageLockFile>
    </PropertyGroup>
    <Message Condition="Exists($(PackageLockFile))" Importance="high" Text="Restoring dependencies using 'npm ci --no-optionals'. This may take several minutes..." />
    <Exec Condition="Exists($(PackageLockFile))" WorkingDirectory="$(SpaRoot)" Command="npm ci --no-optionals" />
    <Message Condition="!Exists($(PackageLockFile))" Importance="high" Text="Restoring dependencies using 'npm install --no-optionals'. This may take several minutes..." />
    <Exec Condition="!Exists($(PackageLockFile))" WorkingDirectory="$(SpaRoot)" Command="npm install --no-optionals" />
  </Target>

  <ItemGroup>
    <!-- Reference for Content tag at https://docs.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2019#content
         and for None tag at https://docs.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-items?view=vs-2019#none -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)src/**" />
    <None Include="$(SpaRoot)*" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="MyApp\src\images\" />
  </ItemGroup>

  <Target Name="BuildDev" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
    <!-- When building Debug create bundle(s) but do not minify -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
  </Target>

  <Target Name="BuildProd" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Release' ">
    <!-- When building Release create production bundle as per webpack.config.js -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:prod" />
  </Target>

  <Target Name="PublishDistFiles" AfterTargets="ComputeFilesToPublish">
    <!-- Source for this target: https://stackoverflow.com/a/54725321/411428 -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist/**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>Always</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <!-- END webpack-dev-server -->
  <!-- *********************************************************************************************************************************** -->

</Project>
